// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"go.mongodb.org/mongo-driver/mongo"
	"kanastra-api/internal/entity"
	"kanastra-api/internal/event"
	"kanastra-api/internal/infra/database"
	"kanastra-api/internal/infra/web"
	"kanastra-api/internal/usecase"
	"kanastra-api/pkg/events"
)

// Injectors from wire.go:

func NewCreateFileUseCase(client *mongo.Client, eventDispatcher events.EventDispatcherInterface) *usecase.SaveFileUseCase {
	fileRepository := database.NewFileRepository(client)
	fileEvent := event.NewFileEvent()
	saveFileUseCase := usecase.NewSaveFileUseCase(fileRepository, fileEvent, eventDispatcher)
	return saveFileUseCase
}

func NewProcessFileUseCase(client *mongo.Client, eventDispatcher events.EventDispatcherInterface) *usecase.ProcessFileUseCase {
	fileRepository := database.NewFileRepository(client)
	billetRepository := database.NewBilletRepository(client)
	fileEvent := event.NewFileEvent()
	processFileUseCase := usecase.NewProcessFileUseCase(fileRepository, billetRepository, fileEvent, eventDispatcher)
	return processFileUseCase
}

func NewGetFilesUseCase(client *mongo.Client) *usecase.GetFilesUseCase {
	fileRepository := database.NewFileRepository(client)
	getFilesUseCase := usecase.NewGetFilesUseCase(fileRepository)
	return getFilesUseCase
}

func NewFileHandler(client *mongo.Client, eventDispatcher events.EventDispatcherInterface) *web.FileHandler {
	fileRepository := database.NewFileRepository(client)
	billetRepository := database.NewBilletRepository(client)
	fileEvent := event.NewFileEvent()
	fileHandler := web.NewFileHandler(eventDispatcher, fileRepository, billetRepository, fileEvent)
	return fileHandler
}

func NewEventsHandler(sseChannel *chan string) *web.EventHandler {
	eventHandler := web.NewEventHandler(sseChannel)
	return eventHandler
}

// wire.go:

var setFileRepositoryDependency = wire.NewSet(database.NewFileRepository, wire.Bind(new(entity.FileRepositoryInterface), new(*database.FileRepository)))

var setBilletRepositoryDependency = wire.NewSet(database.NewBilletRepository, wire.Bind(new(entity.BilletRepositoryInterface), new(*database.BilletRepository)))

var setEventDispatcherDependency = wire.NewSet(events.NewEventDispatcher, event.NewFileEvent, wire.Bind(new(events.EventInterface), new(*event.FileEvent)), wire.Bind(new(events.EventDispatcherInterface), new(*events.EventDispatcher)))

var setFileEvent = wire.NewSet(event.NewFileEvent, wire.Bind(new(events.EventInterface), new(*event.FileEvent)))
